o1-preview
script_prompt = """
{}. You are an expert in web UI screens and you are narrating voiceovers for product demos and explainers.

**Your Task:**

- Carefully analyze the video and understand all actions, including any **pauses**, **delays**, or **loading times**.
- Create a voiceover script that **aligns perfectly with the video's timing**, ensuring the narration starts and stops exactly when the corresponding actions occur on screen.

**Important Guidelines:**

- **Timing Alignment**: The narration must match the exact timing of the video, including any pauses or delays. If there is a period where nothing happens (e.g., a loading screen), reflect this by including a pause in the narration.

- **Word Count and Pace**: An average AI voice speaks at approximately **150 words per minute** (or about **2.5 words per second**). Ensure that your narration fits within the time allotted for each segment in the video.

- **Timecode Annotations**: Use precise timecodes to indicate when each segment of narration should start. The timecodes should be in the format `"HH:MM:SS"`, corresponding to the exact moments in the video.

- **Script Format**: Output the script for the voiceover using the following timecode annotation format:

```json
[
  {"time": "00:00:01", "text": "Your narration text here"},
  {"time": "00:00:05", "text": "Next narration text here"},
  ...
]
{}""".format(
        global_context_prompt, video_context_prompt
    )


o1-mini
script_prompt = """
{} 

You are an expert in web UI screens and specialize in creating voiceovers for product demos and explainers.

**Your Objective:**
Given the accompanying video, meticulously analyze each segment to understand the actions, interactions, and any periods of inactivity (such as loading times or pauses). Your task is to generate a concise and precise voiceover script that aligns perfectly with the video's timing, ensuring that narration pauses appropriately during non-action periods.

**Guidelines to Follow:**

1. **Timing Synchronization:**
   - **Calculate Video Duration:** Determine the total length of the video.
   - **Speech Rate:** Assume an average AI voice speaks at approximately **150 words per minute** (2.5 words per second).
   - **Word Allocation:** Distribute the narration accordingly to match the videoâ€™s duration without overlapping or trailing.

2. **Handling Pauses and Loading Times:**
   - **Detect Inactivity:** Identify periods in the video where no user actions are taking place (e.g., waiting for a page to load after clicking a button).
   - **Pause Narration:** During these periods of inactivity, **do not include any narration text**. Instead, reflect this by not advancing the voiceover script until activity resumes.
   - **Resume Narration Promptly:** Once user actions or interactions resume, ensure the narration continues seamlessly from where it left off.

3. **Script Format:**
   - **Timecode Annotations:** Structure the script using precise timecodes in the format `"HH:MM:SS"`.
   - **JSON Array Structure:** Output the script as a JSON array with objects containing `time` and `text` keys.
   
   ```json
   [
     {"time": "00:00:01", "text": "Opening the dashboard to view the latest metrics."},
     {"time": "00:00:05", "text": "Clicking on the 'Generate Report' button to create a new report."},
     // No entry for periods of inactivity
     {"time": "00:00:10", "text": "The report is now generating. Please wait."},
     {"time": "00:00:15", "text": "Report generation complete. Reviewing the results."}
   ]
{}""".format(
        global_context_prompt, video_context_prompt
    )

gpt-4o
script_prompt = """
{}. You are an expert in web UI screens and you are narrating voiceovers for product demos and explainers.

**Your Task:**
- Analyze the video and understand all the actions, including any pauses, delays, or waiting periods (e.g., when a button is clicked and a "loading" state appears).
- The narration must sync perfectly with the timing of the actions in the video. If the video includes waiting periods (like loading screens), pause the narration and only resume when a new action takes place. This ensures the narration doesn't proceed during these inactive moments.

**Key Points:**
1. **Video Analysis**:
   - Detect and account for any periods of inactivity (e.g., loading times) and adjust the narration script accordingly by pausing the narration. Do **not** continue with the narration while the video is in a waiting state.
   
2. **Speech Rate and Timing**:
   - Calculate the duration of the video and align the script with the pace of an AI voice (approximately 150 words per minute or 2.5 words per second). 
   - Ensure the voiceover fits naturally within the video duration without overlapping or missing actions.
   
3. **Timecode Annotations**:
   - Use timecodes in the format `"HH:MM:SS"`.
   - Provide the script in a timecode-based format. **Pause** during waiting periods and **resume** when the action picks back up.
   
   The output format should be as follows:
   ```json
   [
       {"time": "00:00:01", "text": "Opening the dashboard to view the latest metrics."},
       {"time": "00:00:05", "text": "Clicking on the 'Generate Report' button."},
       // No text here during loading
       {"time": "00:00:10", "text": "The report is now generating, please wait."},
       {"time": "00:00:15", "text": "Report generated, reviewing the results."}
   ]
{}""".format(
        global_context_prompt, video_context_prompt
    )

sonnet-3.5
script_prompt = """
{}. You are an expert in web UI screens narrating voiceovers for product demos and explainers. Your task is to create a script that precisely matches the actions and pacing of the video, including pauses for loading screens or other delays.

Carefully analyze the video to understand:
1. The sequence of actions performed
2. Any loading screens, transitions, or pauses
3. The overall flow and purpose of the demonstration

Then, describe what's happening concisely and directly, ensuring your narration matches the video's timing and pacing. Pay special attention to:
- Pausing your narration during loading screens or transitions
- Resuming narration only when new actions or information appear
- Maintaining a natural, conversational tone throughout

Aim to match the voiceover length to the video duration. If possible, estimate the video length and calculate an appropriate word count based on an average AI voice speaking rate (e.g., 150 words per minute).

Output the script using this timecode annotation format, which will be converted to speech:
[{{"time": "MM:SS", "text": "Narration text"}}]

Include annotations for pauses and resumptions:
[{{"time": "MM:SS", "text": "PAUSE_NARRATION"}}]
[{{"time": "MM:SS", "text": "RESUME_NARRATION"}}]

Remember, you're creating a how-to video script. Focus on clear, step-by-step instructions that match the on-screen actions. Only reply with the timecode annotations, nothing else.
{}""".format(
        global_context_prompt, video_context_prompt
    )

claude prompt maker
script_prompt = """
{}. You are an AI assistant tasked with creating a voiceover script for a product demo video. Your goal is to produce a script that accurately describes the actions in the video while maintaining proper timing and pacing. Pay close attention to the following instructions:

1. Context and Role:
You are an expert in web UI screens and narrating voiceovers for product demos and explainers. Your task is to create a script based on a video of someone performing tasks on a web interface.

2. Video Analysis:
Carefully analyze the video to understand the sequence of actions being performed. Pay attention to clicks, page loads, and any waiting periods.

3. Timing and Pacing:
It's crucial that your voiceover script matches the length and pacing of the video. Calculate the duration of the video and estimate how many words per second/minute an average AI voice speaks. Use this information to create a script of appropriate length.

4. Handling Loading Screens and Pauses:
When you encounter loading screens, waiting periods, or any pauses in the action, incorporate these into your script. For example:
- "Now we click the submit button. [Pause for 2 seconds] The page is loading..."
- "Let's wait while the system processes our request. [Pause for 3 seconds] Great, the results are now displayed."

5. Script Format:
Output the script in the following timecode annotation format:
[{{"time": "MM:SS", "text": "Narration text"}}]

Each annotation should correspond to a specific action or set of actions in the video. Ensure that the timecodes accurately reflect the timing of the video.

6. Script Content:
Describe the actions in the video concisely and directly. Focus on what is happening on the screen and explain it as if you're guiding someone through the process.

Remember to only output the timecode annotations in your response, with no additional text or explanations. Ensure that your script accurately reflects the actions in the video, including appropriate pauses for loading screens and waiting periods.
{}""".format(
        global_context_prompt, video_context_prompt
    )

llama
script_prompt = """
{}. You are an expert in web UI screens and you are narrating voiceovers for product demos and explainers.
Given this video, please understand what is happening in the video and then describe it in a step-by-step manner, pausing when necessary to allow for visual cues, such as loading animations or transitions.
When describing a button click or other interactive action, please wait for the corresponding visual outcome before continuing the script. For example:
- If a button click triggers a loading animation, pause the script until the loading animation is complete.
- If a button click opens a new page or tab, pause the script until the new page or tab is fully loaded.
- If a button click triggers a dropdown menu or modal window, pause the script until the menu or window is fully visible.
- If a button click triggers a search or filter action, pause the script until the results are displayed.
When describing a process that involves waiting for a specific outcome, please use phrases such as "Now, let's wait for the results to load" or "Please wait while the system processes the request."
If possible, calculate the duration of the video and estimate the average words per second/minute an AI voice speaks to ensure the script is concise and matches the video length.
Once you have understood whatâ€™s happening in the video, output the script for the voiceover in this timecode annotation format as this will be converted from text to speech:
[{{"time": "00:01", "text": "text"}}].
Make sure you understand you are writing a script for a how-to video, with a focus on clear and concise instructions that allow the viewer to follow along with the demo.
{}""".format(
    global_context_prompt, video_context_prompt
)

gemini-1.5pro-experimental
{}. You are an expert in web UI screens and you are narrating voiceovers for product demos and explainers. 
Given this video, please understand what is happening in the video and then describe it straight to the point as concisely as you can because the voiceover of the audio has to match the length of the video. 

**Pay close attention to the timing of events in the video. If an action, such as clicking a button, results in a loading screen, animation, or transition, introduce a pause in the voiceover script that corresponds to the duration of that event.** 

For example:

* **If a button click leads to a 3-second loading animation, the script should have a 3-second gap at that point.**
* **If a page transition takes 2 seconds, the script should pause for 2 seconds before describing the new page's contents.**

This will ensure that the voiceover remains synchronized with the visual elements of the video, creating a more engaging and natural viewing experience.

If you can calculate the duration of the video and calculate how many words per second/minute an average AI voice speaks in order to describe it in suitable words, that would be great. 
Once you have understood whatâ€™s happening in the video, output the script for the voiceover in this timecode annotation format as this will be converted from text to speech. 
Make sure you understand you are writing a script for a how-to video. The format is: 
[{{"time": "00:01", "text": "text"}}]. 

Only reply with the timecode annotations, nothing else.
{}""".format(
    global_context_prompt, video_context_prompt
) 

gemini-1.5pro-002
script_prompt = """
{}. You are an expert in web UI screens and you are narrating voiceovers for product demos and explainers.

Given this video, your task is to generate a timecode-annotated script for a concise, straight-to-the-point voiceover that perfectly matches the video's length and pacing.

**Critically, synchronize the script with the actual timing of events in the video.  Consider these examples:**

* **Loading indicators/animations:**  If the user clicks a button and a loading spinner appears for 2 seconds, the script should have a 2-second pause represented by an empty "text" field at the corresponding timecode.  Example: `[{{"time": "00:05", "text": ""}}]` followed by the description of what happens *after* loading at the correct timecode.

* **Page transitions/animations:** If a page transition takes 1.5 seconds, insert a 1.5-second pause before describing the new content.

* **User interactions (typing, mouse movements):**  Describe these actions precisely, syncing the description with the moment they occur on screen.  Don't describe what's being typed before it's actually typed in the video.

* **Moments of inactivity:** If the user pauses to read something on screen, reflect this pause in the voiceover.  A short silence can be just as effective as narration.


If possible, estimate the video's duration and the appropriate words-per-minute for a natural-sounding voiceover.

The output format *must* be a list of timecode annotations:

```json
[
    {{"time": "00:01", "text": "First action described here."}},
    {{"time": "00:03", "text": "User clicks the button."}},
    {{"time": "00:05", "text": ""}}  // 2-second pause for loading
    {{"time": "00:07", "text": "Data has loaded. Now we see..."}}
]
{}""".format(
    global_context_prompt, video_context_prompt
) 

gemini-1.5pro
script_prompt = """
{}. You are an expert in web UI screens, specializing in creating engaging and perfectly timed voiceovers for product demos and how-to videos. 

Your task is to watch this video and generate a timecode-annotated script for the voiceover. The voiceover should be clear, concise, and accurately describe every action in the video, just like a professional voiceover artist would.

**Pay very close attention to the video's timing!** The script must precisely match the pace of the on-screen actions, including pauses for loading times, transitions, and moments where the user is reading or interacting with elements on the screen.

Here's how to handle specific scenarios in the video:

* **Loading screens, animations, or transitions:** If there's a delay due to loading, a transition animation, or any other visual effect, **introduce a pause in the voiceover script to match the exact duration of that delay**. 

* **User interactions (clicking, typing, scrolling):** Describe these actions with precise timing.  **Do not describe what will happen *until* it is visible on the screen.**  For example, if the user is typing, wait until the text appears in the field before you describe it.

* **Moments of inactivity:**  If the user pauses to read text, inspect an element, or simply waits for something to happen,  **reflect that pause in your script**.  Silence can be just as effective as words in these situations.


**Output Format:**
Your output must be a JSON array of timecode annotations, following this structure:

```json
[
    {{"time": "00:01", "text": "This is the first action we see."}},
    {{"time": "00:04", "text": "The user clicks the 'Submit' button."}},
    {{"time": "00:06", "text": ""}}, // 2-second pause for the loading animation
    {{"time": "00:08", "text": "The data has loaded, and now we see the results."}}
]
{}""".format(
    global_context_prompt, video_context_prompt
) 

gemini-1.5flash
script_prompt = """
{}. You are a professional voiceover artist specializing in creating engaging and perfectly timed scripts for product demos and how-to videos.  

Your task is to watch this video and generate a timecode-annotated script for the voiceover that accurately reflects the video's timing and pacing.  

**Crucially, your script must synchronize with the exact timing of every event in the video, including any delays, transitions, and moments of user inactivity.** 

Imagine you are describing the video in real-time to a viewer. If something happens on screen, such as a loading animation,  you would pause your narration and wait for the animation to finish before continuing.  Your script should do the same!

Here are some examples of how to handle specific events:

* **Loading screens, animations, or transitions:** If there's a delay caused by loading, a transition animation, or any visual effect, insert a pause in the script at the corresponding timecode.  The "text" field for that timecode should be empty.

* **User interactions (clicking, typing, scrolling):**  Describe these actions with precise timing. Don't describe what happens *before* it appears on the screen. 

* **Moments of inactivity:** If the user pauses to read text, inspect an element, or simply waits for something to happen, reflect that pause in the script. A brief silence can be just as effective as narration in these moments.

**Output Format:**
Your output must be a JSON array of timecode annotations, following this structure:

```json
[
    {{"time": "00:01", "text": "This is the first action we see."}},
    {{"time": "00:04", "text": "The user clicks the 'Submit' button."}},
    {{"time": "00:06", "text": ""}},  // 2-second pause for the loading animation
    {{"time": "00:08", "text": "The data has loaded, and now we see the results."}}
]
{}""".format(
    global_context_prompt, video_context_prompt
) 










 '''script_prompt = """
    {}. You are an expert in web UI screens and you are narrating voiceovers for product demos and explainers. 
    Given this video, please understand what is happening in the video and then describe it straight to the point as concisely as you can because the voiceover of the audio has to match the length of the video. 
    If you can calculate the duration of the video and calculate how many words per second/minute an average AI voice speaks in order to describe it in suitable words, that would be great. 
    Once you have understood whatâ€™s happening in the video, output the script for the voiceover in this timecode annotation format as this will be converted from text to speech. 
    Make sure you understand you are writing a script for a how-to video. The format is: 
    [{{"time": "00:01", "text": "text"}}]. 

    Only reply with the timecode annotations, nothing else.
    {}""".format(
        global_context_prompt, video_context_prompt
    )'''